# version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.email=abdelrahman.elewah@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/etc/traefik/acme.json"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik
      - ./acme.json:/etc/traefik/acme.json
    networks:
      - app-network
    environment:
      - TRAEFIK_ACME_EMAIL=abdelrahman.elewah@gmai.com
      - TRAEFIK_ACME_STORAGE=/etc/traefik/acme.json
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`${TRAFEIK_DOMAIN_NAME}`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=myresolver"

  frontend:
    image: elewah/localelive-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${DOMAIN_NAME}`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    networks:
      - app-network
    depends_on:
      - traefik
    environment:
      - NODE_ENV=production

  backend:
    image: elewah/localelive-backend
    build: .
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi.rule=Host(`${BACKEND_DOMAIN_NAME}`)"
      - "traefik.http.routers.fastapi.entrypoints=websecure"
      - "traefik.http.routers.fastapi.tls=true"
      - "traefik.http.routers.fastapi.tls.certresolver=myresolver"
      - "traefik.http.services.fastapi.loadbalancer.server.port=8000"
    networks:
      - app-network
    depends_on:
      - traefik
    environment:
      # - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ORS_API_KEY=${ORS_API_KEY}
      - Google_Maps_API_Key=${GOOGLE_MAPS_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - MONGODB_URL=${MONGODB_URL}
      - LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY}
      - LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2}
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - CORS_ORIGINS=*
      - TIMEZONE=America/Toronto

networks:
  app-network:
    driver: bridge 